{
  "name": "@authereum/contracts",
  "version": "0.0.1-beta.15",
  "description": "Ethereum smart contract for Authereum",
  "main": "dist/index.js",
  "types": "index.d.ts",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "dev": "tsc --watch",
    "build": "tsc",
    "ganache": "ganache-cli --port 8545 --deterministic --accounts 11 -e 1000",
    "test": "jest --runInBand",
    "lint": "tslint --fix -c tslint.json src/*.ts",
    "publish-module": "npm publish --tag beta --access public",
    "prepare": "npm run lint && npm run build"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@authereum/utils": "0.0.1-beta.6",
    "@authereum/zos": "2.4.0-beta.5",
    "eth-ens-namehash": "^2.0.8",
    "ethereumjs-util": "^6.1.0",
    "ethers": "^4.0.33",
    "ganache-core": "^2.5.6-beta.0",
    "is-valid-signature": "0.0.6",
    "openzeppelin-eth": "^2.2.0",
    "openzeppelin-solidity": "^2.3.0",
    "solc": "^0.5.8",
    "solidity-bytes-utils": "0.0.8",
    "truffle": "5.0.22",
    "truffle-contract": "^4.0.15",
    "truffle-hdwallet-provider": "^1.0.8",
    "truffle-privatekey-provider": "^1.1.0",
    "typescript": "^3.5.2",
    "web3": "1.0.0-beta.37",
    "web3-providers-ws": "1.0.0-beta.37",
    "zeppelin-solidity": "^1.12.0",
    "zos": "^2.4.1",
    "zos-lib": "^2.4.0"
  },
  "devDependencies": {
    "@types/jest": "^24.0.15",
    "@typescript-eslint/eslint-plugin": "^1.11.0",
    "@typescript-eslint/parser": "^1.11.0",
    "chai": "^4.2.0",
    "dotenv": "^8.0.0",
    "eslint-config-standard-with-typescript": "^7.1.0",
    "eslint-plugin-import": "^2.18.0",
    "eslint-plugin-node": "^9.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.0",
    "jest": "^24.8.0",
    "openzeppelin-test-helpers": "^0.4.0",
    "standard": "^12.0.1",
    "standardx": "^3.0.1",
    "ts-jest": "^24.0.2",
    "tslint": "^5.18.0",
    "tslint-config-standard": "^8.0.1"
  },
  "keywords": [],
  "standardx": {
    "globals": [
      "describe",
      "context",
      "before",
      "beforeEach",
      "after",
      "afterEach",
      "it",
      "expect"
    ]
  }
}
